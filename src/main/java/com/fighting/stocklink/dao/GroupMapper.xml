<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fighting.stocklink.dao.GroupMapper">
  <resultMap id="BaseResultMap" type="com.fighting.stocklink.model.Group">
    <id column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fighting.stocklink.model.Group">
    <result column="group_description" jdbcType="LONGVARCHAR" property="groupDescription" />
  </resultMap>
  <sql id="Base_Column_List">
    group_id, user_id, group_name
  </sql>
  <sql id="Blob_Column_List">
    group_description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Group
    where group_id = #{groupId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Group
    where group_id = #{groupId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fighting.stocklink.model.Group">
    insert into Group (group_id, user_id, group_name, 
      group_description)
    values (#{groupId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, 
      #{groupDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fighting.stocklink.model.Group">
    insert into Group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="groupDescription != null">
        group_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupDescription != null">
        #{groupDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fighting.stocklink.model.Group">
    update Group
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupDescription != null">
        group_description = #{groupDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fighting.stocklink.model.Group">
    update Group
    set user_id = #{userId,jdbcType=INTEGER},
      group_name = #{groupName,jdbcType=VARCHAR},
      group_description = #{groupDescription,jdbcType=LONGVARCHAR}
    where group_id = #{groupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fighting.stocklink.model.Group">
    update Group
    set user_id = #{userId,jdbcType=INTEGER},
      group_name = #{groupName,jdbcType=VARCHAR}
    where group_id = #{groupId,jdbcType=INTEGER}
  </update>
</mapper>